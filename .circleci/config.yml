version: 2.1

orbs:
  docker: circleci/docker@0.5.20
  jq: circleci/jq@2.2.0
  jahia-modules-orb: jahia/jahia-modules-orb@0.4.0

references:
  workdir: &workdir
    working_directory: ~/source

  persist-workspace: &persist-workspace
    persist_to_workspace:
      root: ~/source
      paths:
        - .

  attach-workspace: &attach-workspace
    attach_workspace:
      at: .

# Parameters are available across the entire config file and can be used with this syntax: << pipeline.parameters.THE_PARAMETER >>
# Avoid using project-specific variables in the jobs or steps.
# Instead, declare those as pipeline parameters (At the top of the config file).
# This eases portability of the config file across different modules
parameters:
  AUDITCI_LEVEL:
    type: string
    default: "high"
  TESTS_PATH:
    type: string
    default: "tests/"
  TESTS_IMAGE:
    type: string
    default: "jahia/jcontent"
  TESTRAIL_MILESTONE:
    type: string
    default: "Default"
  MODULE_ID:
    type: string
    default: "jContent"
  TESTRAIL_PROJECTNAME:
    type: string
    default: "jContent Module"
  GITHUB_SLUG:
    type: string
    default: "jahia/jContent"
  PRIMARY_RELEASE_BRANCH:
    type: string
    default: "master" # main or master ? set the branch for the main release
  JAHIA_IMAGE:
    type: string
    default: "jahia/jahia-ee-dev:8-SNAPSHOT"
  RELEASE_ID:
    type: string
    default: ""
  RELEASE_VERSION:
    type: string
    default: ""
  IS_RELEASE:
    type: boolean
    default: false
  UPDATE_SIGNATURE:
    type: boolean
    default: false
  SSH_KEY_FINGERPRINT:
    type: string
    default: "a5:8b:fd:fb:1b:38:af:66:3d:fb:1e:84:22:e1:8a:e1"
  SHOULD_SKIP_ARTIFACTS:
    type: boolean
    default: true
  SHOULD_SKIP_TESTRAIL:
    type: boolean
    default: true
  SHOULD_SKIP_NOTIFICATIONS:
    type: boolean
    default: true
  SHOULD_SKIP_ZENCREPES:
    type: boolean
    default: false
  TESTS_MANIFEST: # Manifest to be executed by the test container when triggered from an API call
    type: string
    default: ""
  IS_ROLLBACK:
    type: boolean
    default: false
  IS_MANUAL_TESTRUN: # Was the workflow triggered by an API call ?
    type: boolean
    default: false

workflows:
  # On code change is executed each time new code is pushed to a branch
  # Current project configuration in circleci only builds on PR + main, so effectively this is only being executed
  on-code-change:
    unless:
      or:
        - << pipeline.parameters.IS_RELEASE >>
        - << pipeline.parameters.UPDATE_SIGNATURE >>
    jobs:
      - jahia-modules-orb/initialize
      - jahia-modules-orb/update-signature:
          pre-steps:
            - jahia-modules-orb/update-signature-prestep
          ssh_key_fingerprints:  << pipeline.parameters.SSH_KEY_FINGERPRINT >>
          context: QA_ENVIRONMENT
          requires:
            - jahia-modules-orb/initialize
      - jahia-modules-orb/static-analysis:
          requires:
            - jahia-modules-orb/initialize            
      - jahia-modules-orb/build:
          context: QA_ENVIRONMENT
          requires:
            - jahia-modules-orb/initialize
            - jahia-modules-orb/update-signature
      - jahia-modules-orb/sonar-analysis:
          context: QA_ENVIRONMENT
          primary_release_branch: << pipeline.parameters.PRIMARY_RELEASE_BRANCH >>
          github_slug: << pipeline.parameters.GITHUB_SLUG >>
          requires:
            - jahia-modules-orb/build
      - jahia-modules-orb/publish:
          context: QA_ENVIRONMENT
          requires:
            - jahia-modules-orb/build
          filters:
            branches:
              only:
                - << pipeline.parameters.PRIMARY_RELEASE_BRANCH >>
      # Verifies that the new code works with the latest released version of Jahia
#      - jahia-modules-orb/integration-tests:
#          name: "Int. Tests - Jahia Latest - Built modules"
#          requires:
#            - jahia-modules-orb/build
#          context: QA_ENVIRONMENT
#          jahia_image: jahia/jahia-ee-dev:8-SNAPSHOT
#          tests_manifest: provisioning-manifest-build.yml
#          module_id: << pipeline.parameters.MODULE_ID >>
#          testrail_project: << pipeline.parameters.TESTRAIL_PROJECTNAME >>
#          testrail_milestone: << pipeline.parameters.TESTRAIL_MILESTONE >>
#          should_skip_zencrepes: << pipeline.parameters.SHOULD_SKIP_ZENCREPES >>

  # The on-release workflow was created to handle the full release lifecycle after creating a release using GitHub
  # https://github.com/Jahia/sandbox/releases
  # The release is first created using the "pre-release" tag and a pipeline is triggered from a GitHub action
  # This pipeline perform the following action:
  # - Delete the tag created by GitHub (unnecessary)
  # - Run mvn release:prepare
  # - Generate the changelog using auto (https://www.npmjs.com/package/auto)
  # - Run mvn release:perform
  on-release:
    when: << pipeline.parameters.IS_RELEASE >>
    jobs:
      - jahia-modules-orb/initialize
      - jahia-modules-orb/generate-changelog:
          context: QA_ENVIRONMENT
          ssh_key_fingerprints: << pipeline.parameters.SSH_KEY_FINGERPRINT >>
          requires:
            - jahia-modules-orb/initialize
      - jahia-modules-orb/release:
          context: QA_ENVIRONMENT
          module_id: << pipeline.parameters.MODULE_ID >>
          github_slug: << pipeline.parameters.GITHUB_SLUG >>
          release_id: << pipeline.parameters.RELEASE_ID >>
          release_version: << pipeline.parameters.RELEASE_VERSION >>
          primary_release_branch: << pipeline.parameters.PRIMARY_RELEASE_BRANCH >>
          ssh_key_fingerprints:  << pipeline.parameters.SSH_KEY_FINGERPRINT >>
          requires:
            - jahia-modules-orb/generate-changelog
      - jahia-modules-orb/update-signature:
          context: QA_ENVIRONMENT
          ssh_key_fingerprints: << pipeline.parameters.SSH_KEY_FINGERPRINT >>
          requires:
            - jahia-modules-orb/release
      - wait-for-approval:
          type: approval
          context: QA_ENVIRONMENT
          requires:
            - jahia-modules-orb/release
      - jahia-modules-orb/release-publication:
          context: QA_ENVIRONMENT
          requires:
            - wait-for-approval
          module_id: << pipeline.parameters.MODULE_ID >>
          release_version: << pipeline.parameters.RELEASE_VERSION >>

  # The on-signature-update workflow was created to handle the signage of modules in case it needs to be done manually.
  # https://github.com/Jahia/sandbox#manually-updating-signature-via-command-line
  # The pipeline performs the following action:
  # - Check the commit message that it contains [ci sign], [sign ci] or [jahia update signature]
  # - Downloads the keymaker cli (version 2.0)
  # - Obtain the new signature using the keymaker cli
  # - Update the pom.xml
  # - Push changes back to github
  on-signature-update:
    when: << pipeline.parameters.UPDATE_SIGNATURE >>
    jobs:
      - jahia-modules-orb/update-signature:
          pre-steps:
            - jahia-modules-orb/update-signature-prestep
          ssh_key_fingerprints:  << pipeline.parameters.SSH_KEY_FINGERPRINT >>
          context: QA_ENVIRONMENT
  # The manual-run workflow was created to allow the triggering of an integration testing run using CircleCI pipeline API
  manual-run:
    when: << pipeline.parameters.IS_MANUAL_TESTRUN >>
    jobs:
      - jahia-modules-orb/initialize
      - jahia-modules-orb/integration-tests:
          context: QA_ENVIRONMENT
          requires:
            - jahia-modules-orb/initialize
          jahia_image: << pipeline.parameters.JAHIA_IMAGE >>
          tests_manifest: << pipeline.parameters.TESTS_MANIFEST >>
          module_id: << pipeline.parameters.MODULE_ID >>
          testrail_project: << pipeline.parameters.TESTRAIL_PROJECTNAME >>
          testrail_milestone: << pipeline.parameters.TESTRAIL_MILESTONE >>
          should_skip_artifacts: << pipeline.parameters.SHOULD_SKIP_ARTIFACTS >>
          should_skip_testrail: << pipeline.parameters.SHOULD_SKIP_TESTRAIL >>
          should_skip_notifications: << pipeline.parameters.SHOULD_SKIP_NOTIFICATIONS >>
          should_skip_zencrepes: << pipeline.parameters.SHOULD_SKIP_ZENCREPES >>
  # The on-rollback workflow was created to handle release rollback when a release has been deleted from Github
  # The rollback pipeline/job performs the following action:
  # - restore rollback artifact cache created from the release job
  # - Run mvn:rollback
  # - Delete github tag associated with the release
  on-rollback:
    when: << pipeline.parameters.IS_ROLLBACK >>
    jobs:
      - jahia-modules-orb/release-rollback:
          context: QA_ENVIRONMENT
          ssh_key_fingerprints: << pipeline.parameters.SSH_KEY_FINGERPRINT >>
          release_id: << pipeline.parameters.RELEASE_ID >>
          release_version: << pipeline.parameters.RELEASE_VERSION >>
      - jahia-modules-orb/release-cancellation:
          context: QA_ENVIRONMENT
          requires:
            - jahia-modules-orb/release-rollback
          module_id: << pipeline.parameters.MODULE_ID >>
          pipeline_id: << pipeline.id >>
          release_version: << pipeline.parameters.RELEASE_VERSION >>

  # The objective of nightly runs is to ensure the codebase still passes tests:
  # - With the latest releases version of Jahia
  # - With the current snapshot of Jahia
#  nightly:
#    triggers:
#      - schedule:
#          cron: "0 0 * * *"
#          filters:
#            branches:
#              only:
#                - << pipeline.parameters.PRIMARY_RELEASE_BRANCH >>
#    jobs:
#      - jahia-modules-orb/initialize
#      - jahia-modules-orb/integration-tests:
#          name: Nightly-<< matrix.jahia_image >>
#          context: QA_ENVIRONMENT
#          requires:
#            - jahia-modules-orb/initialize
#          matrix:
#            parameters:
#              jahia_image: ["jahia/jahia-ee-dev:8-SNAPSHOT"]
#              tests_manifest: ["provisioning-manifest-snapshot.yml"]
#              module_id: ["<< pipeline.parameters.MODULE_ID >>"]
#              testrail_project: ["<< pipeline.parameters.TESTRAIL_PROJECTNAME >>"]
#              testrail_milestone: ["<< matrix.jahia_image >>"]
#              should_skip_artifacts: [true]
#              should_skip_testrail: [false]
#              should_skip_notifications: [false]
#              should_skip_zencrepes: [false]
